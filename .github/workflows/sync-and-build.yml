name: sync-and-build

on:
  workflow_dispatch:
  schedule:
    - cron: '0 */12 * * *'
  
jobs:
  sync-with-upstream:
    name: sync-and-build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          ref: master
          fetch-depth: 0
          token: ${{ secrets.GAT }}

      - name: Fetch And Merge Upstream
        id: get_latest_release
        run: |
          LATEST_TAG=$(curl -s https://api.github.com/repos/johanw666/Signal-Android/releases/latest | jq -r '.tag_name')
          if [[ ! "$LATEST_TAG" =~ ^v[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+-JW$ ]]; then
            exit 1
          else            
            echo "::set-output name=latest_tag::$LATEST_TAG"
            latest_branch=${LATEST_TAG#v}
            echo "Latest branch name: $latest_branch"
          fi
          git remote add master https://github.com/johanw666/Signal-Android.git
          git fetch master
          git reset --hard master/$latest_branch
    
      - name: Fetch Latest Release Information - Main Repository
        id: get_latest_release_main
        run: |
          LATEST_TAG_MAIN=$(curl -s https://api.github.com/repos/JohnBetaro/Signal-Android-AMOLED-Dark-Plus/releases/latest | jq -r '.tag_name')
          echo "::set-output name=latest_tag_main::$LATEST_TAG_MAIN"
       
      - name: Compare Tags
        id: compare_tags
        run: |
          LATEST_TAG=${{ steps.get_latest_release.outputs.latest_tag }}
          LATEST_TAG_MAIN=${{ steps.get_latest_release_main.outputs.latest_tag_main }}
          LATEST_TAG_MAIN=${LATEST_TAG_MAIN%"-JB"}
          if [ "$LATEST_TAG" == "$LATEST_TAG_MAIN" ]; then
            echo "Latest tags are the same. Skipping the following steps."
            echo "::set-output name=skip_steps::true"
          else
            echo "Latest tags are different. Continue with the following steps."
            echo "::set-output name=skip_steps::false"
          fi

      - name: Push Changes
        run: |
          git push -f origin master
        if: steps.compare_tags.outputs.skip_steps != 'true'

      - name: Set Up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17
          cache: gradle
        if: steps.compare_tags.outputs.skip_steps != 'true'

      - name: Validate Gradle Wrapper
        uses: gradle/wrapper-validation-action@v1
        if: steps.compare_tags.outputs.skip_steps != 'true'
        
      - name: Change Version
        run: |
          if ! grep -q 'def canonicalVersionName = ".*-JB"' app/build.gradle; then
            sed -i.bak 's/\(def canonicalVersionName = ".*\)"/\1-JB"/' app/build.gradle
          fi
        if: steps.compare_tags.outputs.skip_steps != 'true'

      - name: Display Changed Version
        run: awk '/def canonicalVersionName = /' app/build.gradle
        if: steps.compare_tags.outputs.skip_steps != 'true'

      - name: Change Colors
        run: |
          sed -i '{
            s/\(<color name="signal_dark_colorSurface">#\)[0-9a-fA-F]\{6\}/\1000000/g
            s/\(<color name="signal_dark_colorSurfaceVariant">#\)[0-9a-fA-F]\{6\}/\1303033/g
            s/\(<color name="signal_dark_colorBackground">#\)[0-9a-fA-F]\{6\}/\1000000/g
            s/\(<color name="signal_dark_colorSurface1">#\)[0-9a-fA-F]\{6\}/\1000000/g
            s/\(<color name="signal_dark_colorSurface2">#\)[0-9a-fA-F]\{6\}/\1000000/g
            s/\(<color name="signal_dark_colorSurface3">#\)[0-9a-fA-F]\{6\}/\1000000/g
            s/\(<color name="signal_dark_colorSurface4">#\)[0-9a-fA-F]\{6\}/\1000000/g
            s/\(<color name="signal_dark_colorSurface5">#\)[0-9a-fA-F]\{6\}/\1000000/g
            s/\(<color name="signal_dark_colorBackground_92">#\)[0-9a-fA-F]\{8\}/\1FF000000/g
            s/\(<color name="signal_dark_colorSurface_87">#\)[0-9a-fA-F]\{8\}/\1FF000000/g
            s/\(<color name="signal_dark_colorSurfaceVariant_92">#\)[0-9a-fA-F]\{8\}/\1FF000000/g
          }' app/src/main/res/values/material3_colors_dark.xml
        if: steps.compare_tags.outputs.skip_steps != 'true'

      - name: Display Changed Colors
        run: |
          grep -E "<color name=\"signal_dark_color(Background|Surface|SurfaceVariant)_?[0-9]{0,2}\">#(1)?([0-9a-fA-F]{6}|[0-9a-fA-F]{8})</color>" app/src/main/res/values/material3_colors_dark.xml
        if: steps.compare_tags.outputs.skip_steps != 'true'
     
      - name: Update README.md
        run: |
          if [ -f README.md ]; then
           echo "Deleting existing README.md."
           rm README.md
          fi
           echo "Creating new README.md."
           curl -o README.md https://raw.githubusercontent.com/JohnBetaro/Signal-Android-AMOLED-Dark-Plus/dev/README.md
        if: steps.compare_tags.outputs.skip_steps != 'true'

      - name: Create GitHub Workflow
        run: |
          if [ ! -d .github/workflows ]; then
            mkdir -p .github/workflows
          else
            rm .github/workflows/*
          fi
          curl -o .github/workflows/sync-and-build.yml https://raw.githubusercontent.com/JohnBetaro/Signal-Android-AMOLED-Dark-Plus/dev/.github/workflows/sync-and-build.yml
        if: steps.compare_tags.outputs.skip_steps != 'true'
  
      - name: Push Updating Version To Master Branch
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: 'Update version'
          file_pattern: 'app/build.gradle'
          branch: 'master'
          commit_options: '--no-verify'
          access_token: ${{ secrets.GAT }}
        if: steps.compare_tags.outputs.skip_steps != 'true'

      - name: Push Updating Colors To Master Branch
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: 'Update colors'
          file_pattern: 'app/src/main/res/values/material3_colors_dark.xml'
          branch: 'master'
          commit_options: '--no-verify'
          access_token: ${{ secrets.GAT }}
        if: steps.compare_tags.outputs.skip_steps != 'true'

      - name: Push Updating README.md To Master Branch
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: 'Update README.md'
          file_pattern: 'README.md'
          branch: 'master'
          commit_options: '--no-verify'
          access_token: ${{ secrets.GAT }}
        if: steps.compare_tags.outputs.skip_steps != 'true'

      - name: Push Adding Workflow To Master Branch
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
         commit_message: 'Add sync-and-build Workflow'
         file_pattern: '.github/workflows/*'
         branch: 'master'
         commit_options: '--no-verify'
         access_token: ${{ secrets.GAT }}
        if: steps.compare_tags.outputs.skip_steps != 'true'
          
      - name: Build With Gradle
        run: ./gradlew assemblePlayProdRelease --parallel
        if: steps.compare_tags.outputs.skip_steps != 'true'

      - name: Sign APKs
        env:
          KEYSTORE_BASE64: ${{ secrets.KEYSTORE_BASE64 }}
          KEYSTORE_PASS: ${{ secrets.KEYSTORE_PASS }}
        run: |
          echo "${KEYSTORE_BASE64}" | base64 -d > apksign.keystore
          for apk in app/build/outputs/apk/playProd/release/*-unsigned-*.apk; do
            out=${apk/-unsigned-/-signed-}
            ${ANDROID_HOME}/build-tools/30.0.2/apksigner sign --ks apksign.keystore --ks-pass env:KEYSTORE_PASS --out "${out}" "${apk}"
            echo "$(sha256sum ${out})"
          done
          rm apksign.keystore
        if: steps.compare_tags.outputs.skip_steps != 'true'
        
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GAT }}
        with:
          tag_name: "${{ steps.get_latest_release.outputs.latest_tag }}-JB"
          release_name: "Signal ${{ steps.get_latest_release.outputs.latest_tag }}-JB"
          draft: false
          prerelease: false
        if: steps.compare_tags.outputs.skip_steps != 'true'
        
      - name: Get Universal APK Filename
        id: get-universal-apk-filename
        run: echo "::set-output name=FILENAME::$(basename $(ls -1 app/build/outputs/apk/playProd/release/*-universal-*-signed-*.apk))"
        if: steps.compare_tags.outputs.skip_steps != 'true'
        
      - name: Upload Universal APK
        id: upload_step
        uses: actions/upload-release-asset@v1
        env:
           GITHUB_TOKEN: ${{ secrets.GAT }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: "app/build/outputs/apk/playProd/release/${{ steps.get-universal-apk-filename.outputs.FILENAME }}"
          asset_name: ${{ steps.get-universal-apk-filename.outputs.FILENAME }}
          asset_content_type: application/vnd.android.package-archive         
        if: steps.compare_tags.outputs.skip_steps != 'true'

      - name: Get Release Informations
        id: get_release_info
        run: |
          release_info=$(curl -s "https://api.github.com/repos/JohnBetaro/Signal-Android-AMOLED-Dark-Plus/releases/latest" -H "Authorization: Bearer ${{ secrets.GAT }}")
          echo "::set-output name=apk_asset_count::$(echo $release_info | jq '.assets | length')"
          echo "::set-output name=release_id::$(echo $release_info | jq -r '.id')"
        if: ${{ always() }}
         
      - name: Delete Release If No APK Uploaded
        run: |
          release_id=${{ steps.get_release_info.outputs.release_id }}
          if [[ ${{ steps.get_release_info.outputs.apk_asset_count }} -eq 0 ]]; then
            echo "Deleting the release $release_id"
            curl -X DELETE -H "Authorization: Bearer ${{ secrets.GAT }}" "https://api.github.com/repos/JohnBetaro/Signal-Android-AMOLED-Dark-Plus/releases/$release_id"
          else
            echo "APK found. Not deleting the release."
          fi
        if: ${{ always() }}
        
      - name: Archive Reports For Job
        uses: actions/upload-artifact@v3
        with:
          name: reports
          path: '*/build/reports'
        if: ${{ always() }}
